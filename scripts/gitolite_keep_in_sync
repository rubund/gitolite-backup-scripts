#!/bin/bash

# Script for keeping git repos in two different gitolite setups in sync
# over an encrypted remote storage area.
#
# Currently only the master branch is kept in sync

export PATH="$PATH:/usr/lib/git-encrypt"
source /etc/gitolite-backup-scripts.conf

BACKUPPATH=$1
LOCALPATH=$2


if [ "$BACKUPPATH" = "" ] ; then
  echo "Missing backup path"
  exit
fi
if [ "$LOCALPATH" = "" ] ; then
  echo "Missing local path"
  exit
fi

if [ -d $LOCALPATH ] ; then
  echo "Already cloned. Pulling..."
  echo ""
  pushd $LOCALPATH
   git pull origin master
  popd
else
  get_backup_gitolite $BACKUPPATH $LOCALPATH
fi

echo ""
echo ""
echo ""

mkdir -p /tmp/gitolite_keep_in_sync
chmod go-rwx /tmp/gitolite_keep_in_sync
cd /tmp/gitolite_keep_in_sync

REPOS=`ls ${LOCALPATH}/repositories`

mkdir -p from to

for REPO in $REPOS;
do
  CONTINUE=1
  if [ "$REPO" = "gitolite-admin.git" ] ; then
    continue
  fi
  FROMID=`git ls-remote $LOCALPATH/repositories/$REPO HEAD 2>/dev/null`
  FROMEXISTS=$?
  TOID=`git ls-remote $GITOLITEUSER@localhost:$REPO HEAD 2>/dev/null`
  TOEXISTS=$?

  FROMID=`echo $FROMID | head -n 1 | cut -c 1-40` 2>/dev/null
  TOID=`echo $TOID | head -n 1 | cut -c 1-40` 2>/dev/null
  #echo ""
  # echo "Fromexists: $FROMEXISTS"
  # echo "Toexists: $TOEXISTS"
  #echo ""

  if [ "$FROMEXISTS" = "0" ] && [ "$TOEXISTS" = "0" ] ; then
      echo $REPO":"
      echo ""
        echo "FROMID: "$FROMID
        echo "TOID: "$TOID
      #echo "OK"
      #echo ""
      if [ "$FROMID" != "$TOID" ] ;then
        if [ -d from/$REPO ] ; then
          #echo "from/$REPO is already cloned"
          pushd from/$REPO > /dev/null
          git pull origin master
          git pull origin master --tags
          popd > /dev/null
        else
          git clone $LOCALPATH/repositories/$REPO from/$REPO
          if [ "$?" = "0" ]; then
            CONTINUE=1
          else
            CONTINUE=0
          fi
        fi
        if [ "$CONTINUE" = "1" ] ; then
          if [ -d to/$REPO ] ; then
            #echo "to/$REPO is already cloned"
            pushd to/$REPO > /dev/null
            git pull origin master
            git pull origin master --tags
            popd > /dev/null
          else
            git clone $GITOLITEUSER@localhost:$REPO to/$REPO
          fi
        fi
        #echo "DONE"
      else
        echo "Already the same"
      fi
      echo ""
      echo ""
      echo ""
  fi
done


REPOS=`ls /tmp/gitolite_keep_in_sync/to`
echo "\"Merging\"..."
echo ""

for REPO in $REPOS;
do
 pushd /tmp/gitolite_keep_in_sync/to/$REPO > /dev/null
 git remote -v | grep fromrepo > /dev/null
 if [ "$?" = "0" ] ; then
   git remote rm fromrepo
 fi
 git remote add fromrepo file:///tmp/gitolite_keep_in_sync/from/$REPO
 git pull fromrepo master
 git pull fromrepo master --tags
 git push origin master
 git push origin master --tags
 popd > /dev/null
 echo ""
done

rm -rf /tmp/gitolite_keep_in_sync
